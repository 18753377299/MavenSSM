<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop.xsd">

 
	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref ="dataSource"/>
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<!-- ？：匹配一个字符,*：匹配任意字符,**：匹配多层路径 -->
		<property name="mapperLocations" value="classpath:mapper/**/*.xml" />
		 <!-- 自动扫描mybatis配置文件，tomcat解析web.xml文件时，配置文件扫描到这个文件，
		    从而会加载头文件中的约束 ，tomcat加载不到这个约束。所以在路径前添加dtd,使配置文件不扫描这个文件，
		    不会出现java.net.UnknownHostException: mybatis.org这个错误-->
    	<property name="configLocation" value="classpath:spring/dtd/mybatis-config.xml"></property>
	</bean>
	  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<!-- 		<property name="basePackage" value="com.**.dao" /> -->
		<property name="basePackage" value="com.**.dao,com.**.dao.**.impl" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManagerMybatis" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 拦截器方式配置事物 -->
<!-- 	事务的通知 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManagerMybatis">
		<tx:attributes>
			<!-- 配置事务传播特性 -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.**.service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>
	
	<!-- 配置数据库注解aop -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <bean id="manyDataSourceAspect" class="com.common.db.datasource.aspect.DataSourceAspect" />
    <aop:config>
        <aop:aspect id="c" ref="manyDataSourceAspect">
<!--             <aop:pointcut id="tx" expression="execution(* com.*.slave.*.service..*Impl.*(..))"/> -->
            <aop:pointcut id="tx" expression="execution(* com.**.dao.*.*(..))"/>
            <aop:before pointcut-ref="tx" method="before"/>
        </aop:aspect>
    </aop:config>
    <!-- 配置数据库注解aop -->
	
</beans>