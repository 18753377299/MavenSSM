<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.example.vo.User" >
    <id column="user_code" property="userCode" jdbcType="VARCHAR" />
    <id column="pass_word" property="passWord" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="identity_number" property="identityNumber" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_code, pass_word, user_name, age, email, identity_number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_code = #{userCode,jdbcType=VARCHAR}
      and pass_word = #{passWord,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from user
    where user_code = #{userCode,jdbcType=VARCHAR}
      and pass_word = #{passWord,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.vo.User" >
    insert into user (user_code, pass_word, user_name, 
      age, email, identity_number
      )
    values (#{userCode,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{identityNumber,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.vo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="passWord != null" >
        pass_word,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="identityNumber != null" >
        identity_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="identityNumber != null" >
        #{identityNumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.vo.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="identityNumber != null" >
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
    </set>
    where user_code = #{userCode,jdbcType=VARCHAR}
      and pass_word = #{passWord,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.vo.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      identity_number = #{identityNumber,jdbcType=VARCHAR}
    where user_code = #{userCode,jdbcType=VARCHAR}
      and pass_word = #{passWord,jdbcType=VARCHAR}
  </update>
</mapper>